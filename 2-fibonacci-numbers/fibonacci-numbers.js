// Project Euler Problem 2

// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.


// Pseudocode
// Build a function that renders the Fibonacci sequence up to a certain length.
// Run the sequence through a loop to test for even elements, excluding all values greater than 4,000,000.
// Using an accumulator, sum all even Fibonaccis together.

function fibonacciSumToFourMil() {
  var fib = [0, 1], sum = 0;
  for (var i = 0; i < 32; i++) {
  fib.push(fib[i + 1] + fib[i]);
  };
  for (var i = 2; i < fib.length; i++) {
    if (fib[i] % 2 === 0) {
      // console.log("test");
      sum += fib[i];
      // console.log("Fib sequence number: " + fib[i]);
      // console.log("Sum: " + sum);
    };
  };
  return sum;
};

console.log(fibonacciSumToFourMil());

// should print 4613732




// Issues
// A simple error that made this problem a lot more tedious was that I kept using commas in my numbers. Don't do that. It's really easy to overlook and renders the program useless.